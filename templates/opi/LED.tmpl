<div data-pv="{{pv_name}}" class="widget_wrap" style="
  top: {{y}}px;
  left: {{x}}px;
  width: {{width}}px;
  height: {{height}}px;">


  {% if border_width > 0 and border_style.index != 0 %}
  <style scoped>
    .border{{unique_id}}_0 {
      padding: {{max(0, 2-border_width)}}px;
      border-width: {{border_width}}px;
      {% if border_style.index == 0 %}
      border-style: {{border_style}};
      border-color: transparent;
      {% else %}
      border-style: solid;
      border-color: rgb({{border_color.red}},{{border_color.green}},{{border_color.blue}});
      {% end %}
    }
    .border{{unique_id}}_1 {
      padding: {{max(0, border_width-2)}}px;
    }
    .border{{unique_id}}_2 {
      padding: {{max(0, border_width-2)}}px;
    }
    .border{{unique_id}}_3 {
      padding: {{max(0, border_width-2)}}px;
    }
  </style>
  {% end %}

  {% if border_alarm_sensitive and pv_name %}
  <div class="disconnected" data-map="js: elementSetVisible(element, %alarm.severity%==4)"></div>
  {% end %}

  <div data-id="border"
    {% if border_alarm_sensitive and pv_name %}
    {% set div_border_width=(width - max(4, 2*border_width if border_style.index!=0 else 0)) %}
    data-map="css: border_%alarm.severity% border{{unique_id}}_%alarm.severity%"
    style="width: {{div_border_width}}px;
           height: {{div_border_width}}px;
           display: inline-block;"
    {% else %}
    {% set div_border_width=(width - (2*border_width if border_style.index!=0 else 0)) %}
    class="border{{unique_id}}_0"
    style="width: {{div_border_width}}px;
           height: {{div_border_width}}px;
           display: inline-block;"
    {% end %}
    >

    {% for state in states %}
    <div data-id="content" class="widget_body" data-type="{{widget_type}}"
      data-map="js: elementSetVisible(element, [%value%, %valueEnum.index%].includes({{state.value}})); title: {{tooltip}}"
      style="width: {{div_border_width - 4}}px;
             height: {{div_border_width - 4}}px;
             top: {{max(2 if border_alarm_sensitive else 0, border_width if border_style.index!=0 else 0)}}px;
             left: {{max(2 if border_alarm_sensitive else 0, border_width if border_style.index!=0 else 0)}}px;
             border: 2px solid grey;
             background-color: rgb({{state.color.red}},{{state.color.green}},{{state.color.blue}});
             white-space: nowrap;
             {% if not square_led %}border-radius: 50%{% end %}
            ">
        {% if show_boolean_label %}{{state.label}}{% end %}
    </div>
    {% end %}

  </div>


</div>
